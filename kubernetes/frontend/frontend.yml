apiVersion: v1
kind: Service
metadata:
  name: service-frontend
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  selector:
    app.kubernetes.io/name: frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: frontend
  replicas: 2
  template:
    metadata:
      labels:
        app.kubernetes.io/name: frontend
    spec:
      containers:
      - name: frontend
        image: 707413322123.dkr.ecr.sa-east-1.amazonaws.com/cisp-frontend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 200m
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 3
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ingress-frontend
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
# Caso queira utilizar SSL, é necessário subir o certificado no ACM e descomentar as linhas abaixo.
#    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'
#    alb.ingress.kubernetes.io/certificate-arn:  # Apontar a ARN do certificado que está no ACM.
spec:
  rules:
   - host: #frontend.4labs.example # Domínio a ser utilizado no Ingress.
     http:
        paths:
          - path: /*
            backend:
              serviceName: service-frontend
              servicePort: 80


